{"dependencies":[{"name":"/Users/juanlopez/workspace/dromos/js/map_aco/package.json","includedInParent":true,"mtime":1520472350368},{"name":"/Users/juanlopez/workspace/dromos/js/map_aco/.babelrc","includedInParent":true,"mtime":1520472246805},{"name":"/Users/juanlopez/workspace/dromos/js/map_aco/node_modules/draft-js/package.json","includedInParent":true,"mtime":1516487324000},{"name":"./DraftModifier","loc":{"line":16,"column":28}},{"name":"./EditorState","loc":{"line":17,"column":26}}],"generated":{"js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyCommandInsertNewline\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\n\nfunction keyCommandInsertNewline(editorState) {\n  var contentState = DraftModifier.splitBlock(editorState.getCurrentContent(), editorState.getSelection());\n  return EditorState.push(editorState, contentState, 'split-block');\n}\n\nmodule.exports = keyCommandInsertNewline;","map":{"mappings":[{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/draft-js/lib/keyCommandInsertNewline.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../node_modules/draft-js/lib/keyCommandInsertNewline.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyCommandInsertNewline\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\n\nfunction keyCommandInsertNewline(editorState) {\n  var contentState = DraftModifier.splitBlock(editorState.getCurrentContent(), editorState.getSelection());\n  return EditorState.push(editorState, contentState, 'split-block');\n}\n\nmodule.exports = keyCommandInsertNewline;"},"lineCount":24}},"hash":"7b1ea681f013a7014df062bfc5037037","cacheData":{"env":{}}}